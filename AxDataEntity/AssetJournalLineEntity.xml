<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetJournalLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetJournalLineEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps the entity to the backing datasources.
    /// </summary>
    /// <param name = "_entityCtx">The context of the entity.</param>
    /// <param name = "_dataSourceCtx">The context of the datasource being mapped.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        #isoCountryRegionCodes
        AssetDocumentEntryTableView_JP assetDocumentEntryTableView;

        super(_entityCtx, _dataSourceCtx);

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(AssetJournalLineEntity, LedgerJournalTrans):
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]) && this.DocumentId)
                    {
                        LedgerJournalTrans ledgerJournalTrans = _dataSourceCtx.getBuffer();
                        AssetId assetId = ledgerjournalTrans.getAssetId();

                        select firstonly assetDocumentEntryTableView
                            where assetDocumentEntryTableView.AssetId == assetId
                                && assetDocumentEntryTableView.BookId == this.ValueModel
                                && assetDocumentEntryTableView.Type == this.DocumentType
                                && assetDocumentEntryTableView.DocumentId == this.DocumentId;

                        if (!assetDocumentEntryTableView)
                        {
                            // Unable to find a unique Fixed asset document record corresponding to the entered values.
                            throw error(strfmt("@SYS316757", "@SYS4004938"));
                        }
                        else
                        {
                            this.AssetDocumentEntry = assetDocumentEntryTableView.RecId;
                        }
                    }
                    break;
                case dataEntityDataSourceStr(AssetJournalLineEntity, AssetDocumentEntryTableView_JP):
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
                    {
                        select firstonly assetDocumentEntryTableView
                            where assetDocumentEntryTableView.RecId == this.AssetDocumentEntry;

                        if (assetDocumentEntryTableView)
                        {
                            _dataSourceCtx.setBuffer(assetDocumentEntryTableView);
                        }
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetJournalHeaderEntity</Name>
				<Source><![CDATA[
    private AssetJournalHeaderEntity assetJournalHeaderEntity()
    {
        LedgerJournalTable ledgerJournalTable = LedgerJournalTable::find(this.JournalBatchNumber);

        if (LedgerJournalName::find(ledgerJournalTable.JournalName).JournalType != LedgerJournalType::Assets)
        {
            throw error(strFmt("@SYS114718", ledgerJournalTable.JournalName, LedgerJournalType::Assets));
        }

        AssetJournalHeaderEntity header;

        select firstonly header
            where header.JournalBatchNumber == this.JournalBatchNumber;

        return header;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean isValid = AssetJournalHeaderEntity::validateFixedAssetJournal(this.assetJournalHeaderEntity());

        if (isValid)
        {
            if ((this.DebitAmount && this.CreditAmountReportingCurrency)
                ||(this.CreditAmount && this.DebitAmountReportingCurrency))
            {
                throw error("@FixedAssets:FA_MessageNotification_WrongAmountsForTransactionReporting");
            }
            else if (AssetJournalEntityMap::isDepreciationTransaction(this) && this.CurrencyCode != Ledger::accountingCurrency())
            {
                throw error("@FixedAssets:FA_MessageNotification_WrongCurrencyCodeForDepreciation");
            }
            
            isValid = super();
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean isValid = AssetJournalHeaderEntity::validateFixedAssetJournal(this.assetJournalHeaderEntity());

        if (isValid)
        {
            isValid = super();
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        AssetJournalEntityMap::updateReportingCurrencyAmounts(this);

        super();

        LedgerJournalTrans ledgerJournalTrans;

        select firstonly forupdate ledgerJournalTrans
            where ledgerJournalTrans.JournalNum == this.JournalBatchNumber
                && ledgerJournalTrans.LineNum == this.LineNumber;

        AssetJournalEntityMap::populateAssetBookTableDerivedJournal(this, ledgerJournalTrans);

        this.populateDefaultDimension(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(AssetJournalLineEntity, LedgerJournalTrans))
        {
            this.resolveFintagsWithContext(_entityCtx, _dataSourceCtx);
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateDefaultDimension</Name>
				<Source><![CDATA[
    private void populateDefaultDimension(LedgerJournalTrans _ledgerJournalTrans)
    {
        LedgerJournalTrans_Asset ledgerJournalTransAsset = LedgerJournalTrans_Asset::find(_ledgerJournalTrans.RecId);

        DimensionDefault assetBookDefaultDimension = LedgerJournalEngine::getAccountDefaultDimension(
                _ledgerJournalTrans.parmAccount(),
                _ledgerJournalTrans.Company,
                _ledgerJournalTrans.AccountType,
                ledgerJournalTransAsset.BookId);

        ttsbegin;
        _ledgerJournalTrans.DefaultDimension = LedgerDimensionDefaultFacade::serviceMergeDefaultDimensions(_ledgerJournalTrans.DefaultDimension, assetBookDefaultDimension);
        _ledgerJournalTrans.update();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        AssetBookTableDerivedJournal    assetBookTableDerivedJournal;
        LedgerJournalTrans              ledgerJournalTrans;

        select RecId from ledgerJournalTrans
            where ledgerJournalTrans.JournalNum == this.JournalBatchNumber
                && ledgerJournalTrans.LineNum == this.LineNumber;

        delete_from assetBookTableDerivedJournal
            where assetBookTableDerivedJournal.RefRecId == ledgerJournalTrans.RecId;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method will update the derived books in the fixed asset journal.
    /// </summary>
    public void update()
    {
        AssetJournalEntityMap::updateReportingCurrencyAmounts(this);

        LedgerJournalTrans prevLedgerJournalTrans;
        LedgerJournalTrans_Asset prevLedgerJournalTransAsset;

        select firstonly prevLedgerJournalTrans
            where prevLedgerJournalTrans.JournalNum == this.JournalBatchNumber
                && prevLedgerJournalTrans.LineNum == this.LineNumber
            join prevLedgerJournalTransAsset
                where prevLedgerJournalTransAsset.RefRecId == prevLedgerJournalTrans.RecId;

        super();

        LedgerJournalTrans ledgerJournalTrans;
        LedgerJournalTrans_Asset ledgerJournalTransAsset;

        select firstonly ledgerJournalTrans
            where ledgerJournalTrans.JournalNum == this.JournalBatchNumber
                && ledgerJournalTrans.LineNum == this.LineNumber
            join ledgerJournalTransAsset
                where ledgerJournalTransAsset.RefRecId == prevLedgerJournalTrans.RecId;

        AssetJournalEntityMap::updateAssetBookTableDerivedJournal(
            this,
            prevLedgerJournalTrans,
            ledgerJournalTrans,
            prevLedgerJournalTransAsset,
            ledgerJournalTransAsset);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(AssetJournalLineEntity, LedgerJournalTrans))
        {
            this.resolveFintagsWithContext(_entityCtx, _dataSourceCtx);
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountTypeCustomLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a custom account type lookup serialized string for the Account type field.
    /// </summary>
    /// <returns>A serialized string with a list of account types.</returns>
    [
        SysODataActionAttribute("AssetJournalLineEntityAccountTypeFieldCustomLookup", false),
        SysODataCollectionAttribute("_fields", Types::String),
        SysODataFieldLookupAttribute("AccountType")
    ]
    public static str accountTypeCustomLookup(Array _fields)
    {
        return AssetJournalLineEntity::getSupportedAccountType(
            fieldStr(AssetJournalLineEntity, AccountType),
            new AssetJournalExcelTemplate().supportedAccountTypes());
    }

]]></Source>
			</Method>
			<Method>
				<Name>offsetAccountTypeCustomLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a custom offset account type lookup serialized string for the Offset account type field.
    /// </summary>
    /// <returns>A serialized string with a list of offset account types.</returns>
    [
        SysODataActionAttribute("AssetJournalLineEntityEntityOffsetAccountTypeFieldCustomLookup", false),
        SysODataCollectionAttribute("_fields", Types::String),
        SysODataFieldLookupAttribute("OffsetAccountType")
    ]
    public static str offsetAccountTypeCustomLookup(Array _fields)
    {
        return AssetJournalLineEntity::getSupportedAccountType(
            fieldStr(AssetJournalLineEntity, OffsetAccountType), 
            new AssetJournalExcelTemplate().supportedOffsetAccountTypes());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSupportedAccountType</Name>
				<Source><![CDATA[
    private static str getSupportedAccountType(str _fieldName, Set _supportedTypes)
    {
        OfficeAppCustomLookupListResult result = new OfficeAppCustomLookupListResult();
        result.determinationFields().value(1, _fieldName);

        int current = 1;

        SetEnumerator supportedTypesEnumerator = _supportedTypes.getEnumerator();

        while (supportedTypesEnumerator.moveNext())
        {
            LedgerJournalACType currentACType = supportedTypesEnumerator.current();
            result.items().value(current, enum2Str(currentACType));
            current++;
        }

        return result.serialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveFintagsWithContext</Name>
				<Source><![CDATA[
    private void resolveFintagsWithContext(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        AssetJournalLineEntity entity = _entityCtx.getEntityRecord();
        LedgerJournalTrans ledgerJournalTrans = _dataSourceCtx.getBuffer();

        this.resolveFinTags(entity, ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveFinTags</Name>
				<Source><![CDATA[
    private void resolveFinTags(AssetJournalLineEntity _entity, LedgerJournalTrans _ledgerJournalTrans)
    {
        if (LedgerJournalTransAssetFinTagFlight::instance().isEnabled())
        {
            if (LedgerJournalBasedEntityFinTagResolverHelperFlight::instance().isEnabled())
            {
                LedgerJournalBasedEntityFinTagResolverHelper::resolveFinTagsForLedgerJournalTrans(_entity.FinTagDisplayValue, _entity.OffsetFinTagDisplayValue, _ledgerJournalTrans);
            }
            else
            {
                _ledgerJournalTrans.FinTag = FinTagResolver::resolve(_entity.FinTagDisplayValue, _ledgerJournalTrans.Company);
                _ledgerJournalTrans.OffsetFinTag = FinTagResolver::resolve(_entity.OffsetFinTagDisplayValue, _ledgerJournalTrans.OffsetCompany);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<DeveloperDocumentation>@FixedAssets:FA_EntityDeveloper_AssetJournalLineEntity</DeveloperDocumentation>
	<Label>@FixedAssets:FA_EntityTitle_AssetJournalLineEntity</Label>
	<Tags>Journal</Tags>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>FixedAssets</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>AssetJournalLines</PublicCollectionName>
	<PublicEntityName>AssetJournalLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>AccountType</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CreditAmount</Name>
			<DataField>AmountCurCredit</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DebitAmount</Name>
			<DataField>AmountCurDebit</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalBatchNumber</Name>
			<DataField>JournalNum</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Account</Name>
			<AccessModifier>Private</AccessModifier>
			<Label>@SYS24500</Label>
			<DataField>LedgerDimension</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
			<DimensionLegalEntityContextField>dataAreaId</DimensionLegalEntityContextField>
			<DynamicDimensionEnumerationField>AccountType</DynamicDimensionEnumerationField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS24500</Label>
			<Mandatory>No</Mandatory>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionCombinationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>LineNum</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetAccountType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS23950</Label>
			<DataField>OffsetAccountType</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetAccount</Name>
			<AccessModifier>Private</AccessModifier>
			<Label>@SYS11162</Label>
			<DataField>OffsetLedgerDimension</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
			<DimensionLegalEntityContextField>dataAreaId</DimensionLegalEntityContextField>
			<DynamicDimensionEnumerationField>OffsetAccountType</DynamicDimensionEnumerationField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetAccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS11162</Label>
			<Mandatory>No</Mandatory>
			<DataField>DisplayValue</DataField>
			<DataSource>OffsetDimensionCombinationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Text</Name>
			<DataField>Txt</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValueModel</Name>
			<DataField>BookId</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionType</Name>
			<DataField>TransType</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AssetId</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConsumptionUnits</Name>
			<DataField>ConsumptionQuantity</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChineseVoucherTypeRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerVoucherType_CN</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChineseVoucherType</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>Id</DataField>
			<DataSource>LedgerVoucherType_CN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChineseVoucher</Name>
			<DataField>Voucher_CN</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetDocumentEntry</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AssetDocumentEntry_JP</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentType</Name>
			<DataField>DocumentType_JP</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentId</Name>
			<DataField>DocumentId</DataField>
			<DataSource>AssetDocumentEntryTableView_JP</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CreditAmountReportingCurrency</Name>
			<DataField>AmountCreditReportingCurrency</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DebitAmountReportingCurrency</Name>
			<DataField>AmountDebitReportingCurrency</DataField>
			<DataSource>LedgerJournalTrans_Asset</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FinTagDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>FinTag</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetFinTagDisplayValue</Name>
			<Label>@FinTag:FinTag_OffsetDisplayValue</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>OffsetFinTag</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalBatchNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>AssetJournalEntityMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BookId</MapField>
					<MapFieldTo>ValueModel</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CreditAmount</MapField>
					<MapFieldTo>CreditAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CreditAmountReportingCurrency</MapField>
					<MapFieldTo>CreditAmountReportingCurrency</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DebitAmount</MapField>
					<MapFieldTo>DebitAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DebitAmountReportingCurrency</MapField>
					<MapFieldTo>DebitAmountReportingCurrency</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FixedAssetNumber</MapField>
					<MapFieldTo>FixedAssetNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalBatchNumber</MapField>
					<MapFieldTo>JournalBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNumber</MapField>
					<MapFieldTo>LineNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionType</MapField>
					<MapFieldTo>TransactionType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>AssetJournalHeaderEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>AssetJournalHeaderEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>JournalBatchNumber</Field>
					<RelatedField>JournalBatchNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>LegalEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>OMLegalEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>dataAreaId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>LedgerDimensionFA</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AssetJournalLineLedgerDimensionCombination</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetJournalLineLedgerDimension</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>Account</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>OffsetLedgerDimensionFA</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AssetJournalLineOffsetLedgerDimensionCombination</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetJournalLineOffsetLedgerDimension</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>OffsetAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CurrencyEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AssetJournalLineCurrency</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetJournalLineCurrency</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>AssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>AssetValueModelSetupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AssetJournalLineValueModel</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ValueModelAssetJournalLine</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ValueModel</Field>
					<RelatedField>ValueModelId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LedgerVoucherTypeEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>LedgerVoucherTypeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ChineseVoucherType</Field>
					<RelatedField>VoucherType</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LedgerJournalTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LedgerJournalTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionCombinationEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>OffsetDimensionCombinationEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>OffsetLedgerDimension</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerJournalTrans_Asset</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LedgerJournalTrans_Asset</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>AssetDocumentEntryTableView_JP</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>AssetDocumentEntryTableView_JP</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>AssetDocumentEntry_JP</Field>
										<JoinDataSource>LedgerJournalTrans_Asset</JoinDataSource>
										<JoinRelationName>AssetDocumentEntryTableView_JP</JoinRelationName>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RefRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerVoucherType_CN</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>LedgerVoucherType_CN</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>LedgerVoucherType_CN</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<JoinRelationName>LedgerVoucherType_CN</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FinTag</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>FinTag</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>FinTag</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>OffsetFinTag</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>FinTag</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>OffsetFinTag</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>