<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RouteGroupEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RouteGroupEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.getBuffer().TableId == tableNum(RouteJobSetup))
        {
            RouteJobType routeJobType = this.getRouteJobTypeFromSourceContext(_dataSourceCtx);
            RouteJobSetup routeJobSetup = RouteJobSetup::find(this.GroupId, routeJobType);
            _dataSourceCtx.setBuffer(routeJobSetup);
            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
            this.mapEntityToDataSource(_entityCtx, _dataSourceCtx);
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRouteJobTypeFromSourceContext</Name>
				<Source><![CDATA[
    private RouteJobType getRouteJobTypeFromSourceContext(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(RouteGroupEntity, RouteJobSetupQueueBefore):
                return RouteJobType::QueueBefore;
            case dataEntityDataSourceStr(RouteGroupEntity, RouteJobSetupSetup):
                return RouteJobType::Setup;
            case dataEntityDataSourceStr(RouteGroupEntity, RouteJobSetupProcess):
                return RouteJobType::Process;
            case dataEntityDataSourceStr(RouteGroupEntity, RouteJobSetupOverlap):
                return RouteJobType::Overlap;
            case dataEntityDataSourceStr(RouteGroupEntity, RouteJobSetupTransport):
                return RouteJobType::Transport;
            case dataEntityDataSourceStr(RouteGroupEntity, RouteJobSetupQueueAfter):
                return RouteJobType::QueueAfter;
        }

        throw error(error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProdRouting</ConfigurationKey>
	<DeveloperDocumentation>@SCM:RouteGroupEntityDevDoc</DeveloperDocumentation>
	<FormRef>RouteGroup</FormRef>
	<Label>@SYS4888</Label>
	<Tags>Route</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RouteGroupStaging</DataManagementStagingTable>
	<Modules>ProductionControl</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupId</Name>
			<DataField>RouteGroupId</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupName</Name>
			<DataField>Name</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionEstimationAndCostingUseSetupTimeAndSetupCategory</Name>
			<DataField>CalcSetUp</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionEstimationAndCostingUseProcessTimeAndProcessCategory</Name>
			<DataField>CalcProc</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionEstimationAndCostingUseQuantityAndQuantityCategory</Name>
			<DataField>CalcQty</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillAutomaticRouteConsumptionUseSetupTime</Name>
			<DataField>AutoSetUpTime</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillAutomaticRouteConsumptionUseProcessTime</Name>
			<DataField>AutoProcessTime</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillAutomaticRouteConsumptionUseQuantity</Name>
			<DataField>AutoQty</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsOperationManuallyReportedAsFinishedByDefault</Name>
			<DataField>ReportFinishOpr</DataField>
			<DataSource>RouteGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsQueueBeforeJobActive</Name>
			<DataField>Activation</DataField>
			<DataSource>RouteJobSetupQueueBefore</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillQueueBeforeJobSchedulingUseJobManagement</Name>
			<DataField>JobCtrlTime</DataField>
			<DataSource>RouteJobSetupQueueBefore</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillQueueBeforeJobSchedulingUseWorkingTimeCalendar</Name>
			<DataField>SchedWorkTime</DataField>
			<DataSource>RouteJobSetupQueueBefore</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillQueueBeforeJobSchedulingCreateResourceCapacityReservations</Name>
			<DataField>SchedCapacity</DataField>
			<DataSource>RouteJobSetupQueueBefore</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSetupJobActive</Name>
			<DataField>Activation</DataField>
			<DataSource>RouteJobSetupSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSetupJobSchedulingUseJobManagement</Name>
			<DataField>JobCtrlTime</DataField>
			<DataSource>RouteJobSetupSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSetupJobSchedulingUseWorkingTimeCalendar</Name>
			<DataField>SchedWorkTime</DataField>
			<DataSource>RouteJobSetupSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSetupJobSchedulingCreateResourceCapacityReservations</Name>
			<DataField>SchedCapacity</DataField>
			<DataSource>RouteJobSetupSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsProcessJobActive</Name>
			<DataField>Activation</DataField>
			<DataSource>RouteJobSetupProcess</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProcessJobSchedulingUseJobManagement</Name>
			<DataField>JobCtrlTime</DataField>
			<DataSource>RouteJobSetupProcess</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProcessJobSchedulingUseWorkingTimeCalendar</Name>
			<DataField>SchedWorkTime</DataField>
			<DataSource>RouteJobSetupProcess</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProcessJobSchedulingCreateResourceCapacityReservations</Name>
			<DataField>SchedCapacity</DataField>
			<DataSource>RouteJobSetupProcess</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsOverlapJobActive</Name>
			<DataField>Activation</DataField>
			<DataSource>RouteJobSetupOverlap</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillOverlapJobSchedulingUseJobManagement</Name>
			<DataField>JobCtrlTime</DataField>
			<DataSource>RouteJobSetupOverlap</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillOverlapJobSchedulingUseWorkingTimeCalendar</Name>
			<DataField>SchedWorkTime</DataField>
			<DataSource>RouteJobSetupOverlap</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillOverlapJobSchedulingCreateResourceCapacityReservations</Name>
			<DataField>SchedCapacity</DataField>
			<DataSource>RouteJobSetupOverlap</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsTransportJobActive</Name>
			<DataField>Activation</DataField>
			<DataSource>RouteJobSetupTransport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTransportJobSchedulingUseJobManagement</Name>
			<DataField>JobCtrlTime</DataField>
			<DataSource>RouteJobSetupTransport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTransportJobSchedulingUseWorkingTimeCalendar</Name>
			<DataField>SchedWorkTime</DataField>
			<DataSource>RouteJobSetupTransport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTransportJobSchedulingCreateResourceCapacityReservations</Name>
			<DataField>SchedCapacity</DataField>
			<DataSource>RouteJobSetupTransport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsQueuAfterJobActive</Name>
			<DataField>Activation</DataField>
			<DataSource>RouteJobSetupQueueAfter</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillQueueAfterJobSchedulingUseJobManagement</Name>
			<DataField>JobCtrlTime</DataField>
			<DataSource>RouteJobSetupQueueAfter</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillQueueAfterJobSchedulingUseWorkingTimeCalendar</Name>
			<DataField>SchedWorkTime</DataField>
			<DataSource>RouteJobSetupQueueAfter</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillQueueAfterJobSchedulingCreateResourceCapacityReservations</Name>
			<DataField>SchedCapacity</DataField>
			<DataSource>RouteJobSetupQueueAfter</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>GroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RouteGroup</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RouteGroup</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteJobSetupQueueBefore</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RouteJobSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JobType</Name>
								<Field>JobType</Field>
								<Value>QueueBefore</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RouteGroup</JoinDataSource>
								<JoinRelationName>RouteGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteJobSetupSetup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RouteJobSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JobType</Name>
								<Field>JobType</Field>
								<Value>Setup</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RouteGroup</JoinDataSource>
								<JoinRelationName>RouteGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteJobSetupProcess</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RouteJobSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JobType</Name>
								<Field>JobType</Field>
								<Value>Process</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RouteGroup</JoinDataSource>
								<JoinRelationName>RouteGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteJobSetupOverlap</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RouteJobSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JobType</Name>
								<Field>JobType</Field>
								<Value>Overlap</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RouteGroup</JoinDataSource>
								<JoinRelationName>RouteGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteJobSetupTransport</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RouteJobSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JobType</Name>
								<Field>JobType</Field>
								<Value>Transport</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RouteGroup</JoinDataSource>
								<JoinRelationName>RouteGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteJobSetupQueueAfter</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RouteJobSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JobType</Name>
								<Field>JobType</Field>
								<Value>QueueAfter</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RouteGroup</JoinDataSource>
								<JoinRelationName>RouteGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>